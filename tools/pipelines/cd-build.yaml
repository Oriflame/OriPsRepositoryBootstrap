# CD build for OriPsRepositoryBootstrap
# it should run Pester to unit test bootstrap
# it should deploy to devops artifacts if pushpackage = true
# TBD: call template from /devops
#

parameters:
# pushPackage
- name: pushPackage
  type: boolean
  default: true
  displayName: 'Should we push package to PsGallery?'

trigger:
    paths:
      exclude:
      - 'tools/*'
      - 'docs/*'
    branches:
      include:
      - master
      - develop
      - release/*

jobs:

- job: Publish_to_PsGallery
  displayName: Publish to PsGallery

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: GitVersion@5
    displayName: 'GitVersion'
    inputs:
      runtime: 'core'
      configFilePath: 'tools/pipelines/gitversion.yaml'
    
  - task: PowerShell@2
    name: update_build_and_module_version
    displayName: Update Build and Module Version
    inputs:
      targetType: 'inline'
      script: |
        [bool]$isPrerelease = '$(GitVersion.NuGetPreReleaseTag)' -ne '';
        $version = '$(GitVersion.Major).$(GitVersion.Minor).$(Build.BuildId)'
        if ($isPrerelease)
        {
            $buildversion = "$version-$(GitVersion.NuGetPreReleaseTag)+$(GitVersion.CommitsSinceVersionSource)"
        }else
        {
            $buildversion = $version
        }
        Write-Output "##vso[build.updatebuildnumber]$buildversion"
        $psManifest = Get-ChildItem -Path "$(System.DefaultWorkingDirectory)/src" -Filter *.psd1 | Select-Object -ExpandProperty FullName -First 1
        Update-ModuleManifest -Path $psManifest -ModuleVersion $version -Prerelease '$(GitVersion.NuGetPreReleaseTag)'
      pwsh: true
      workingDirectory: '$(System.DefaultWorkingDirectory)'
  
  - ${{ if eq(parameters.pushPackage, true) }}:
    - task: PowerShell@2
      name: publish_module_pwsh
      displayName: Publish module (PsGallery)
      inputs:
        targetType: 'inline'
        script: |
          Get-Module -Name OriPsRepositoryBootstrap | Remove-Module;
          $psManifest = Get-ChildItem -Path "$(System.DefaultWorkingDirectory)/src" -Filter *.psd1 | Select-Object -ExpandProperty FullName -First 1
          Import-Module -Name $psManifest;
          Publish-Module -Name OriPsRepositoryBootstrap -NuGetApiKey '$(PsGalleryApiKey)'
        pwsh: true
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        condition: and(succeeded())
